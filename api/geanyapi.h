/* geanyapi.h generated by valac 0.24.0, the Vala compiler, do not modify */


#ifndef __GEANYAPI_H__
#define __GEANYAPI_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define GEANY_GOBJECT_TYPE_DOCUMENT (geany_gobject_document_get_type ())
#define GEANY_GOBJECT_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_GOBJECT_TYPE_DOCUMENT, GeanyGObjectDocument))
#define GEANY_GOBJECT_DOCUMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_GOBJECT_TYPE_DOCUMENT, GeanyGObjectDocumentClass))
#define GEANY_GOBJECT_IS_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_GOBJECT_TYPE_DOCUMENT))
#define GEANY_GOBJECT_IS_DOCUMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_GOBJECT_TYPE_DOCUMENT))
#define GEANY_GOBJECT_DOCUMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_GOBJECT_TYPE_DOCUMENT, GeanyGObjectDocumentClass))

typedef struct _GeanyGObjectDocument GeanyGObjectDocument;
typedef struct _GeanyGObjectDocumentClass GeanyGObjectDocumentClass;
typedef struct _GeanyGObjectDocumentPrivate GeanyGObjectDocumentPrivate;

struct _GeanyGObjectDocument {
	GObject parent_instance;
	GeanyGObjectDocumentPrivate * priv;
};

struct _GeanyGObjectDocumentClass {
	GObjectClass parent_class;
};


GType geany_gobject_document_get_type (void) G_GNUC_CONST;
GeanyGObjectDocument* geany_gobject_document_new_new_file (const gchar* utf8_filename, const gchar* text);
GeanyGObjectDocument* geany_gobject_document_construct_new_file (GType object_type, const gchar* utf8_filename, const gchar* text);
GeanyGObjectDocument* geany_gobject_document_new_from_file (const gchar* locale_filename, gboolean readonly, const gchar* forced_enc);
GeanyGObjectDocument* geany_gobject_document_construct_from_file (GType object_type, const gchar* locale_filename, gboolean readonly, const gchar* forced_enc);
GeanyGObjectDocument* geany_gobject_document_get_current (void);
gboolean geany_gobject_document_close (GeanyGObjectDocument* self);
gboolean geany_gobject_document_save (GeanyGObjectDocument* self, gboolean force);
gboolean geany_gobject_document_save_as (GeanyGObjectDocument* self, const gchar* file_name);
gboolean geany_gobject_document_reload (GeanyGObjectDocument* self, const gchar* forced_enc);
gboolean geany_gobject_document_get_is_readonly (GeanyGObjectDocument* self);
void geany_gobject_document_set_is_readonly (GeanyGObjectDocument* self, gboolean value);
gboolean geany_gobject_document_get_changed (GeanyGObjectDocument* self);
void geany_gobject_document_set_changed (GeanyGObjectDocument* self, gboolean value);
gboolean geany_gobject_document_get_is_valid (GeanyGObjectDocument* self);
gboolean geany_gobject_document_get_has_bom (GeanyGObjectDocument* self);
gboolean geany_gobject_document_get_has_tags (GeanyGObjectDocument* self);
gint geany_gobject_document_get_index (GeanyGObjectDocument* self);
gchar* geany_gobject_document_get_display_name (GeanyGObjectDocument* self);
const gchar* geany_gobject_document_get_encoding (GeanyGObjectDocument* self);
void geany_gobject_document_set_encoding (GeanyGObjectDocument* self, const gchar* value);


G_END_DECLS

#endif
