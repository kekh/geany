/* geanyapi.h generated by valac 0.20.1, the Vala compiler, do not modify */


#ifndef __GEANYAPI_H__
#define __GEANYAPI_H__

#include <glib.h>
#include <glib-object.h>
#include <document.h>
#include <gio/gio.h>
#include <stdlib.h>
#include <string.h>
#include <gtk/gtk.h>

G_BEGIN_DECLS


#define GEANY_TYPE_DOC (geany_doc_get_type ())
#define GEANY_DOC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_TYPE_DOC, GeanyDoc))
#define GEANY_DOC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_TYPE_DOC, GeanyDocClass))
#define GEANY_IS_DOC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_TYPE_DOC))
#define GEANY_IS_DOC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_TYPE_DOC))
#define GEANY_DOC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_TYPE_DOC, GeanyDocClass))

typedef struct _GeanyDoc GeanyDoc;
typedef struct _GeanyDocClass GeanyDocClass;
typedef struct _GeanyDocPrivate GeanyDocPrivate;

#define GEANY_TYPE_FILE_TYPE (geany_file_type_get_type ())
#define GEANY_FILE_TYPE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_TYPE_FILE_TYPE, GeanyFileType))
#define GEANY_FILE_TYPE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_TYPE_FILE_TYPE, GeanyFileTypeClass))
#define GEANY_IS_FILE_TYPE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_TYPE_FILE_TYPE))
#define GEANY_IS_FILE_TYPE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_TYPE_FILE_TYPE))
#define GEANY_FILE_TYPE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_TYPE_FILE_TYPE, GeanyFileTypeClass))

typedef struct _GeanyFileType GeanyFileType;
typedef struct _GeanyFileTypeClass GeanyFileTypeClass;
typedef struct _GeanyFileTypePrivate GeanyFileTypePrivate;

#define GEANY_TYPE_FILE_TYPE_MANAGER (geany_file_type_manager_get_type ())
#define GEANY_FILE_TYPE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_TYPE_FILE_TYPE_MANAGER, GeanyFileTypeManager))
#define GEANY_FILE_TYPE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_TYPE_FILE_TYPE_MANAGER, GeanyFileTypeManagerClass))
#define GEANY_IS_FILE_TYPE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_TYPE_FILE_TYPE_MANAGER))
#define GEANY_IS_FILE_TYPE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_TYPE_FILE_TYPE_MANAGER))
#define GEANY_FILE_TYPE_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_TYPE_FILE_TYPE_MANAGER, GeanyFileTypeManagerClass))

typedef struct _GeanyFileTypeManager GeanyFileTypeManager;
typedef struct _GeanyFileTypeManagerClass GeanyFileTypeManagerClass;
typedef struct _GeanyFileTypeManagerPrivate GeanyFileTypeManagerPrivate;

#define GEANY_TYPE_VIEW (geany_view_get_type ())
#define GEANY_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_TYPE_VIEW, GeanyView))
#define GEANY_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_TYPE_VIEW, GeanyViewClass))
#define GEANY_IS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_TYPE_VIEW))
#define GEANY_IS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_TYPE_VIEW))
#define GEANY_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_TYPE_VIEW, GeanyViewClass))

typedef struct _GeanyView GeanyView;
typedef struct _GeanyViewClass GeanyViewClass;
typedef struct _GeanyViewPrivate GeanyViewPrivate;

#define GEANY_TYPE_WINDOW (geany_window_get_type ())
#define GEANY_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_TYPE_WINDOW, GeanyWindow))
#define GEANY_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_TYPE_WINDOW, GeanyWindowClass))
#define GEANY_IS_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_TYPE_WINDOW))
#define GEANY_IS_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_TYPE_WINDOW))
#define GEANY_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_TYPE_WINDOW, GeanyWindowClass))

typedef struct _GeanyWindow GeanyWindow;
typedef struct _GeanyWindowClass GeanyWindowClass;
typedef struct _GeanyWindowPrivate GeanyWindowPrivate;

struct _GeanyDoc {
	GObject parent_instance;
	GeanyDocPrivate * priv;
};

struct _GeanyDocClass {
	GObjectClass parent_class;
};

struct _GeanyFileType {
	GObject parent_instance;
	GeanyFileTypePrivate * priv;
};

struct _GeanyFileTypeClass {
	GObjectClass parent_class;
};

struct _GeanyFileTypeManager {
	GObject parent_instance;
	GeanyFileTypeManagerPrivate * priv;
};

struct _GeanyFileTypeManagerClass {
	GObjectClass parent_class;
};

struct _GeanyView {
	GObject parent_instance;
	GeanyViewPrivate * priv;
};

struct _GeanyViewClass {
	GObjectClass parent_class;
};

struct _GeanyWindow {
	GObject parent_instance;
	GeanyWindowPrivate * priv;
};

struct _GeanyWindowClass {
	GObjectClass parent_class;
};


GType geany_doc_get_type (void) G_GNUC_CONST;
gboolean geany_doc_get_is_valid (GeanyDoc* self);
struct GeanyDocument* geany_doc_get_doc_ptr (GeanyDoc* self);
GType geany_file_type_get_type (void) G_GNUC_CONST;
GeanyFileType* geany_doc_get_file_type (GeanyDoc* self);
GFile* geany_doc_get_file (GeanyDoc* self);
gchar* geany_doc_get_display_name (GeanyDoc* self);
gboolean geany_doc_get_has_bom (GeanyDoc* self);
gboolean geany_doc_get_has_tags (GeanyDoc* self);
gint geany_doc_get_index (GeanyDoc* self);
gboolean geany_doc_get_is_readonly (GeanyDoc* self);
gboolean geany_doc_get_is_changed (GeanyDoc* self);
void geany_doc_set_is_changed (GeanyDoc* self, gboolean value);
const gchar* geany_doc_get_encoding (GeanyDoc* self);
void geany_doc_set_encoding (GeanyDoc* self, const gchar* value);
const gchar* geany_file_type_get_extension (GeanyFileType* self);
gint geany_file_type_get_id (GeanyFileType* self);
gint geany_file_type_get_language (GeanyFileType* self);
const gchar* geany_file_type_get_name (GeanyFileType* self);
gchar** geany_file_type_get_pattern (GeanyFileType* self, int* result_length1);
const gchar* geany_file_type_get_title (GeanyFileType* self);
GType geany_file_type_manager_get_type (void) G_GNUC_CONST;
GeanyFileType* geany_file_type_manager_detect_from_file (GeanyFileTypeManager* self, const gchar* utf8_fn);
GeanyFileType* geany_file_type_manager_lookup_by_name (GeanyFileTypeManager* self, const gchar* name);
GeanyFileTypeManager* geany_file_type_manager_get_default (void);
GType geany_view_get_type (void) G_GNUC_CONST;
GType geany_window_get_type (void) G_GNUC_CONST;
GeanyWindow* geany_window_get_default (void);
GeanyDoc* geany_window_get_active_document (GeanyWindow* self);
GList* geany_window_get_documents (GeanyWindow* self);
GList* geany_window_get_unsaved_documents (GeanyWindow* self);
GtkWindow* geany_window_get_win_ptr (GeanyWindow* self);


G_END_DECLS

#endif
