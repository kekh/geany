<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="GeanyInternal" version="1.0"/>
<include name="Gio" version="2.0"/>
<include name="GLib" version="2.0"/>
<include name="Gtk" version="3.0"/>
<package name="geany-1.0"/>
<c:include name="geanyapi.h"/>
<namespace name="Geany" version="1.0" c:prefix="Geany">
	<class name="Doc" c:type="GeanyDoc" glib:type-name="GeanyDoc" glib:get-type="geany_doc_get_type" glib:type-struct="DocClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DocPrivate" c:type="GeanyDocPrivate*"/>
		</field>
		<property name="is-valid">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<property name="doc-ptr">
			<type name="GeanyInternal.Document" c:type="struct GeanyDocument*"/>
		</property>
		<property name="file-type">
			<type name="Geany.FileType" c:type="GeanyFileType*"/>
		</property>
		<property name="file">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<property name="display-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="has-bom">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<property name="has-tags">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<property name="index">
			<type name="gint" c:type="gint"/>
		</property>
		<property name="is-readonly">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<property name="is-changed" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<property name="encoding" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</glib:signal>
		<glib:signal name="reloaded">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</glib:signal>
		<glib:signal name="saved">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</glib:signal>
		<glib:signal name="activated">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</glib:signal>
		<glib:signal name="filetype_changed">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="old_ft" transfer-ownership="none">
					<type name="Geany.FileType" c:type="GeanyFileType*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="DocClass" c:type="GeanyDocClass" glib:is-gtype-struct-for="Doc">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DocPrivate" c:type="GeanyDocPrivate" disguised="1"/>
	<class name="FileType" c:type="GeanyFileType" glib:type-name="GeanyFileType" glib:get-type="geany_file_type_get_type" glib:type-struct="FileTypeClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="FileTypePrivate" c:type="GeanyFileTypePrivate*"/>
		</field>
		<property name="extension">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="id">
			<type name="gint" c:type="gint"/>
		</property>
		<property name="language">
			<type name="gint" c:type="gint"/>
		</property>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="pattern">
			<array>
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<property name="title">
			<type name="utf8" c:type="gchar*"/>
		</property>
	</class>
	<record name="FileTypeClass" c:type="GeanyFileTypeClass" glib:is-gtype-struct-for="FileType">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FileTypePrivate" c:type="GeanyFileTypePrivate" disguised="1"/>
	<class name="FileTypeManager" c:type="GeanyFileTypeManager" glib:type-name="GeanyFileTypeManager" glib:get-type="geany_file_type_manager_get_type" glib:type-struct="FileTypeManagerClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="FileTypeManagerPrivate" c:type="GeanyFileTypeManagerPrivate*"/>
		</field>
		<method name="detect_from_file" c:identifier="geany_file_type_manager_detect_from_file">
			<return-value transfer-ownership="none">
				<type name="Geany.FileType" c:type="GeanyFileType*"/>
			</return-value>
			<parameters>
				<parameter name="utf8_fn" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup_by_name" c:identifier="geany_file_type_manager_lookup_by_name">
			<return-value transfer-ownership="none">
				<type name="Geany.FileType" c:type="GeanyFileType*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<function name="get_default" c:identifier="geany_file_type_manager_get_default">
			<return-value transfer-ownership="full">
				<type name="Geany.FileTypeManager" c:type="GeanyFileTypeManager*"/>
			</return-value>
		</function>
	</class>
	<record name="FileTypeManagerClass" c:type="GeanyFileTypeManagerClass" glib:is-gtype-struct-for="FileTypeManager">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FileTypeManagerPrivate" c:type="GeanyFileTypeManagerPrivate" disguised="1"/>
	<class name="View" c:type="GeanyView" glib:type-name="GeanyView" glib:get-type="geany_view_get_type" glib:type-struct="ViewClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="ViewPrivate" c:type="GeanyViewPrivate*"/>
		</field>
	</class>
	<record name="ViewClass" c:type="GeanyViewClass" glib:is-gtype-struct-for="View">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ViewPrivate" c:type="GeanyViewPrivate" disguised="1"/>
	<class name="Window" c:type="GeanyWindow" glib:type-name="GeanyWindow" glib:get-type="geany_window_get_type" glib:type-struct="WindowClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="WindowPrivate" c:type="GeanyWindowPrivate*"/>
		</field>
		<function name="get_default" c:identifier="geany_window_get_default">
			<return-value transfer-ownership="full">
				<type name="Geany.Window" c:type="GeanyWindow*"/>
			</return-value>
		</function>
		<property name="active-document">
			<type name="Geany.Doc" c:type="GeanyDoc*"/>
		</property>
		<property name="documents">
			<type name="GLib.List" c:type="GList*">
				<type name="Geany.Doc" c:type="GeanyDoc*"/>
			</type>
		</property>
		<property name="unsaved-documents">
			<type name="GLib.List" c:type="GList*">
				<type name="Geany.Doc" c:type="GeanyDoc*"/>
			</type>
		</property>
		<property name="win-ptr">
			<type name="Gtk.Window" c:type="GtkWindow*"/>
		</property>
		<glib:signal name="document_closed">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="Geany.Doc" c:type="GeanyDoc*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="document_added">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="Geany.Doc" c:type="GeanyDoc*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="document_opened">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="Geany.Doc" c:type="GeanyDoc*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="document_new">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="Geany.Doc" c:type="GeanyDoc*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="document_activated">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="Geany.Doc" c:type="GeanyDoc*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="document_reloaded">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="Geany.Doc" c:type="GeanyDoc*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="document_saved">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="Geany.Doc" c:type="GeanyDoc*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="document_filetype_changed">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="Geany.Doc" c:type="GeanyDoc*"/>
				</parameter>
				<parameter name="old_ft" transfer-ownership="none">
					<type name="Geany.FileType" c:type="GeanyFileType*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="WindowClass" c:type="GeanyWindowClass" glib:is-gtype-struct-for="Window">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="WindowPrivate" c:type="GeanyWindowPrivate" disguised="1"/>
</namespace>
</repository>
